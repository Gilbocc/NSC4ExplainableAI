APPUNTI

Mapping Dataset Prolog

-> (instance_name, instance_surname, instance_class)

name(instance_name).
surname(instance_surname).
nameWithClass(instance_name, instance_class).
surnameWithClass(instance_surname, instance_class).
classification(instance_name, instance_surname, instance_class).

classification(X, Y, Z) :- nameWithClass(X, Z), name(X).

Posso fare un discorso del genere:

Se riesco a recuperare questa logica allora posso capire l'importanza del nome nella classificazione e rafforzare nella rete questo vincolo per i casi errati (Achille)



Salvataggio modello pytorch

Save:

torch.save(the_model.state_dict(), PATH)

Load:

the_model = TheModelClass(*args, **kwargs)
the_model.load_state_dict(torch.load(PATH))

Creazione di dati per addestramento NTP

Genero una nuova istanza
Eseguo la classificazione (y_pred = model(x))
Aggiungo il risultato al file theory.pl nella forma:

label(person(name, surname), class(prediction))

Popolo il file .plt con qualcosa del genere

3 x := y (Desidero tre regole di questa forma)

Induzione logica su dati del modello non vincolato

Effettuo l'addestramento
Salvo le regole risultanti

Correzione modello

Unisco i dati di addestramento e la logica in un'unica teoria e la importo in tuProlog
Lo utilizzo per verificare la logica e capire i possibili errori (albero di prova)

Induzione logica su dati del modello condizionato

Procedo al condizionamento del modello e riparto dal punto 1

!!!!!!!!!!!!